// Constant variables
$resolutions: [350px, 480px, 600px, 768px, 900px, 1200px];
$resizing_animation: height 300ms ease;


// Mixins
@mixin hide-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

//  global context flags using wierd ☠️ names to minimize
//  chance of naming conflicts with other scss variables
$☠️--animation-timeline-duration: null;
$☠️--animation-timeline-tweens  : null;

//  mixin to create an animation context for nested tweens
//  used to calculate the total duration of the animation
//  converting each tween delay into percentages
@mixin animation-timeline($name: unique-id()) {

    //  global context flag to sum up duration
    $☠️--animation-timeline-duration: 0s !global;

    //  global context map to hold animation tweens
    $☠️--animation-timeline-tweens  : () !global;

    //  mixin content (the included tweens)
    @content;

    //  animation name and duration
    //  note! if no name is provided a unique id will be used
    //  this allows you to create one-time-use animations without
    //  having to deal with animation naming conflicts :-)
    animation-name:     $name;
    animation-duration: $☠️--animation-timeline-duration;

    //  create keyframes if duration is more than 0s
    @if $☠️--animation-timeline-duration > 0s {
        @keyframes #{$name} {
            //  loop through the included tweens
            @each $time, $props in $☠️--animation-timeline-tweens {
                //  calculate percentage based on total duration
                #{percentage($time/$☠️--animation-timeline-duration)}{
                    //  print out the tween properties
                    @each $prop, $value in $props {
                        #{$prop}:$value;
                    }
                }
            }
        }
    }

    //  reset global context flags
    $☠️--animation-timeline-duration: null !global;
    $☠️--animation-timeline-tweens  : null !global;
}


//  mixin to create tweens based on a delay and a map
//  containing the the tween properties*
//
//  * using a map is not optimal – but for now you are not
//  able to save @content to variables :(
//
@mixin tween($delay: 0s, $props: null){
    //  only do stuff if we are in a animation-timeline context
    @if $☠️--animation-timeline-tweens {
        //  increment the total animation duration by the the tween delay
        $☠️--animation-timeline-duration: $☠️--animation-timeline-duration + $delay !global;
        //  save current duration and tween props to the global tween map
        $☠️--animation-timeline-tweens: map-merge($☠️--animation-timeline-tweens, ($☠️--animation-timeline-duration: $props)) !global;
    }
}

html, body {
  @include hide-scrollbar;

  // Removing default spaces
  margin: 0;
  padding: 0;
}

#landing {
  height: 100vh;
  width: 100vw;

  background-image: url("../images/background.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;

  display: flex;
  flex-direction: column;

  #landing-center {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: auto;

    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  #landing-comment {
    flex-grow: 0;
    flex-shrink: 1;
    flex-basis: auto;

    color: #9499c9;
    opacity: 42%;
    font-family: "Arial", serif;

    display: flex;
    justify-content: center;
    margin-bottom: 0.5em;

    filter: drop-shadow(0 0 35px #FFF) drop-shadow(0 0 50px #FFF); // Glow effect

    // Noise for glow effect
    background-image: url("../images/comment_noise.png");
    background-repeat: repeat;
    background-position: center;
    background-size: auto;

    // Resizing font size in different resolutions of page
    @media screen {
      $comment-font-size: 32px; // Font size in full HD resolution of the page
      $coefficients: [0.5, 0.6, 0.8, 0.85, 0.9, 1];

      @each $res, $cef in zip($resolutions, $coefficients) {
        @media (min-width: $res) {
          font-size: $comment-font-size * $cef;
        }
      }
    }
  }

  #logo {
    position: relative;

    // Resizing logo in different resolutions of page
    @media screen {
      $logo-height: 570px; // Logo height in full HD resolution of the page
      $zoom_coefficients: [.338, .476, .595, .762, .87, 1];

      @each $res, $cef in zip($resolutions, $zoom_coefficients) {
        @media (min-width: $res) {
          height: $logo-height * $cef;

          #logo-title, .logo-character {
            height: $logo-height * $cef;
          }
        }
      }
    }

    // Z-direction ordering
    .logo-character {
      z-index: 9;
    }

    #logo-title {
      z-index: 10;
    }

    #logo-title, .logo-character {
      position: absolute;

      margin: auto;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;

      transition: $resizing_animation;
    }
  }

  .links-bar {
    display: flex;
    justify-content: center;

    // Noise for glow effect
    background-image: url("../images/links_noise.png");
    background-repeat: no-repeat;
    background-position: center;
    background-size: auto;

    transition: $resizing_animation;

    z-index: 3;

    @media screen {
      $link-height: 40px;
      $link-margin: 11px;
      $zoom_coefficients: [.65, .9, .85, .85, .9, 1];

      @each $res, $cef in zip($resolutions, $zoom_coefficients) {
        @media (min-width: $res) {
          .link {
            margin: $link-margin * $cef;

            img {
              height: $link-height * $cef;
              width: $link-height * $cef;
            }
          }
        }
      }
    }

    .link {
      @mixin link_light_on {
        filter: brightness(0) invert(1) drop-shadow(0 0 20px #FFF) drop-shadow(0 0 50px #FFF);
        opacity: 1;
      }

      @mixin link_light_off {
        filter: brightness(0) invert(0.4);
        opacity: 0.8;
      }

      @mixin link_light_high_voltage {
        filter: brightness(0) invert(1) drop-shadow(0 0 20px #FFF) drop-shadow(0 0 50px #FFF) drop-shadow(0 0 30px #FFF);
        opacity: 1;
      }

      // Making icons into white and glow effect
      @include link_light_on;

      &.link-flickering-animation-1 {
        animation: flickering-1 2s;

        @keyframes flickering-1 {
          20% {
            @include link_light_off;
          }
          24% {
            @include link_light_on;
          }
          28% {
            @include link_light_off;
          }
          60% {
            @include link_light_high_voltage;
          }
          to {
            @include link_light_on;
          }
        }
      }

      &.link-flickering-animation-2 {
        animation: flickering-2 2s;

        @keyframes flickering-2 {
          20% {
            @include link_light_off;
          }
          21% {
            @include link_light_on;
          }

          23% {
            @include link_light_off;
          }
          24% {
            @include link_light_on;
          }

          26% {
            @include link_light_off;
          }
          27% {
            @include link_light_on;
          }

          29% {
            @include link_light_off;
          }
          30% {
            @include link_light_high_voltage;
          }

          70% {
            @include link_light_off;
          }
        }
        }

        &.link-flickering-animation-3 {
          animation: flickering-3 3s;

          @keyframes flickering-3 {
            20% {
              @include link_light_off;
            }
            40% {
              @include link_light_high_voltage;
            }
            60% {
              @include link_light_on;
            }

            70% {
              @include link_light_on;
            }
            72.5% {
              @include link_light_off;
            }
            75% {
              @include link_light_high_voltage;
            }
          }
        }
    }
  }
}

#content {
  height: 100vh;
  width: 100vw;
}

.paw {
  background-image: url("../images/paw.svg");
  background-size: 10px;
  background-repeat: no-repeat;
  background-position: left;
  position: absolute;
  filter: invert(1);
  z-index: 8;
  height: 10px;
  width: 20px;
  opacity: 35%;
  transition: opacity 300ms ease-in;
}

.paw-right {
  background-position: right;
}